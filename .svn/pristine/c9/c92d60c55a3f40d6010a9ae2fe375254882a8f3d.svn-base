<template>
	<view class="update-my-msg-container">
		<view class="update-main">
			<view class="update-list">
				<view class="update-font"> 头像 </view>
				<view style="
            display: flex;
            justify-content: flex-end;
            flex: 1;
            align-items: center;
          " @click="uploadClick">
					<image v-if="headPic" :src="furl + '/file/' + headPic" mode="aspectFill"
						style="width: 30px; height: 30px; border-radius: 50%"></image>
					<image src="../static/imgs/right.png" mode="aspectFill"
						style="width: 15px; height: 15px; margin-left: 15px"></image>
				</view>
			</view>
			<view class="update-list">
				<view class="update-font"> 昵称 </view>
				<view style="display: flex; align-items: center">
					<input type="text" v-model="nick" class="update-input" />
					<image src="../static/imgs/right.png" mode="aspectFill"
						style="width: 15px; height: 15px; margin-left: 15px"></image>
				</view>
			</view>
			<view class="update-list">
				<view class="update-font"> 修改邮箱 </view>
				<view style="display: flex; align-items: center" @click="updatePhone">
					<input type="text" v-model="mailBox" class="update-input" />
					<image src="../static/imgs/right.png" mode="aspectFill"
						style="width: 15px; height: 15px; margin-left: 15px"></image>
				</view>
			</view>
		</view>
		<view style="display: flex;justify-content: space-between;">
			<view class="unsubscribe-button" @click="unsubscribe">
				注销账号
			</view>
			<view class="update-button" @click="updateMsgSure">
				修改信息
			</view>
		</view>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				furl: this.$baseFileUrl,
				headPic: uni.getStorageSync("headPic"),
				username: uni.getStorageSync("userName"),
				nick: uni.getStorageSync("nick"),
				mailBox: uni.getStorageSync("phoneNumber"),
				code: ""
			};
		},
		onLoad() {
			uni.$on("updateEmail", (data) => {
				console.log(data);
				this.mailBox = data.newPhone;
				this.code = data.newCode;
			})

			uni.setNavigationBarTitle({
				title: this.username
			})
		},
		onReady() {
			this.hidePageNavInWechatBrowser();
		},
		methods: {
			// 更改头像
			uploadClick() {
				uni.chooseImage({
					count: 1,
					sizeType: ["original", "compressed"], //指定是原图还是压缩图，默认二者都有
					sourceType: ["album"], //从相册选择
					success: (res) => {
						console.log("成功", res);
						const tempFilePaths = res.tempFilePaths;
						console.log("成功", tempFilePaths[0]);

						uni.uploadFile({
							url: this.$baseFileUrl + "/upload", //post请求的地址
							fileType: "image",
							filePath: tempFilePaths[0],
							name: "upload-images",
							success: (res) => {
								console.log(res);
								this.headPic = res.data.split("|")[0];
								console.log("头像", this.headPic);
								uni.showToast({
									title: "头像上传成功",
									icon: "none",
								});
							},
							fail: (err) => {
								console.log(err);
								uni.showToast({
									title: "头像上传失败",
								});
							},
						});
					},
					fail: (err) => {
						console.log(err);
					},
				});
			},
			// 修改邮箱
			updatePhone() {
				uni.navigateTo({
					url: "./updatePhone",
				});
			},
			// 确定修改信息
			updateMsgSure() {
				uni.showLoading({
					title: "信息修改中...",
				});
				uni.request({
					method: "POST",
					url: this.$baseUrl + "/newWatch/api/userMsgSave",
					header: {
						"content-type": "application/json",
						token: uni.getStorageSync("token"),
					},
					data: {
						headPic: this.headPic,
						nick: this.nick,
						mailBox: this.mailBox,
						code: this.code
					},
					complete: (res) => {
						uni.hideLoading();
						console.log("修改");
						console.log(res);

						if (this.checkBack(res, true) == false) return;

						this.setUserInfo(res);
						this.$isResolve();

						uni.switchTab({
							url: "../pages/mine",
						});
					},
				});
			},

			// 注销账号
			unsubscribe() {
				uni.showModal({
					title: "注销账号",
					content: "确定注销该账号？注销后不可恢复",
					confirmColor: "#1ECC99",
					success: (res) => {
						if (res.confirm) {
							console.log("注销账号");

							uni.request({
								url: this.$baseUrl + "/newWatch/api/accountDel",
								header: {
									"content-type": "application/json",
									token: uni.getStorageSync("token"),
								},
								complete: (res) => {
									uni.hideLoading();

									if (this.checkBack(res, true) == false) return;

									uni.showToast({
										icon: "none",
										title: "注销成功",
										success: () => {
											uni.setStorageSync('userId', null);
											uni.setStorageSync('userName', '');
											uni.setStorageSync("token", '');
											uni.setStorageSync("role", '');
											uni.setStorageSync("nick", '');
											uni.setStorageSync("headPic", '');
											uni.setStorageSync("phoneNumber", '');
											uni.setStorageSync("inviteCode", '');
											uni.setStorageSync("superiorInviteCode",
												'');

											setTimeout(() => {
												uni.reLaunch({
													url: "/pages/mine",
												});
											}, 500)
										}
									})
								},
							});
						} else if (res.cancel) {
							console.log("取消");
						}
					}
				})
			},
		},
	};
</script>

<style lang="scss" scoped>
	.update-my-msg-container {
		width: 100%;
		height: 100vh;
		background-color: #F4F8FB;

		.update-main {
			.update-list {
				height: 86rpx;
				padding: 0 40rpx;
				margin-top: 1px;
				display: flex;
				justify-content: space-between;
				align-items: center;
				background-color: #fff;

				.update-font {
					font-size: 28rpx;
					color: #000;
					font-weight: bold;
				}

				.update-input {
					color: #c3c3c3;
					font-size: 28rpx;
					text-align: right;
				}
			}
		}

		.unsubscribe-button,
		.update-button {
			width: 300rpx;
			height: 80rpx;
			margin: 0 auto;
			margin-top: 50rpx;
			line-height: 80rpx;
			cursor: pointer;
			color: #fff;
			font-size: 26rpx;
			border-radius: 60rpx;
			text-align: center;
		}

		.update-button {
			background-color: #1ECC99;
		}

		.unsubscribe-button {
			background-color: #C0C5CE;
		}
	}
</style>
